# Generated by Django 5.1.5 on 2025-04-10 22:06

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Compound",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=50, unique=True)),
                ("full_name", models.CharField(max_length=100)),
                ("molecular_weight", models.FloatField(blank=True, null=True)),
                ("is_gaseous", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64, unique=True)),
                (
                    "coordinates",
                    django.contrib.gis.db.models.fields.PointField(
                        geography=True, srid=4326
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="AirCompoundReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "entered_concentration_value",
                    models.FloatField(
                        help_text="Entered concentration value of the target compound",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "entered_concentration_unit",
                    models.CharField(
                        choices=[
                            ("ug_m3", "Micrograms per cubic meter"),
                            ("mg_m3", "Milligrams per cubic meter"),
                            ("ppm", "Parts per million"),
                            ("ppb", "Parts per billion"),
                        ],
                        help_text="Concentration of the entered concentration value",
                        max_length=10,
                    ),
                ),
                (
                    "concentration_mgm3",
                    models.FloatField(
                        blank=True,
                        help_text="Compound concentration value in mg/m3",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "concentration_ppm",
                    models.FloatField(
                        blank=True,
                        help_text="Compound concentration value in ppm",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "compound",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="air_readings",
                        to="air_quality.compound",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="air_readings",
                        to="air_quality.location",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="location",
            name="tags",
            field=models.ManyToManyField(
                blank=True, related_name="anemometers", to="air_quality.tag"
            ),
        ),
    ]
